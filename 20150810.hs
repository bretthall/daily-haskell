--Solution to @1HaskellADay http://lpaste.net/5543352342910337024

{--

A fun little read:

Divisibility rules: 
http://www.cicm-conference.org/2015/fm4m/FMM_2015_paper_6.pdf

The first one is divisibility by 3:
for n being Nat holds 3 divides n iff 3 divides Sum digits(n)

Write out this proof in Haskell. Not from the paper, per se, but write out
the proof that if n / 3 then the digits of n / 3 as well

--}

{--
A few minutes thought should convince you that the sum of the digits
of a number is always less than that number unless the number has a
single digit (in which case the sum of the digits is equal to the
number, this should take even less time to convice yourself of). So we
can just recursively compute the sum of the digits until we get a
single digit at which point the number is divisible by three if that
single digit is 3, 6 or 9.
--}
divisibleBy3 :: Int -> Bool
divisibleBy3 x | x < 0 = divisibleBy3 (-x) -- sign doesn't matter here and digits only works for positive numbers
               | s `elem` [3,6,9]  = True
               | otherwise = False
               where
                 s = sums x
                 sums n | length ds == 1 = head ds
                        | otherwise = sums $ sum ds
                        where
                          ds = digits n

digits :: Int -> [Int]
digits = map (read.(:"")) . show

badNums :: [Int]
badNums = filter (\n -> divisibleBy3 n /= (n `mod` 3 == 0)) [1..10000]

-- *Main> badNums
-- []
-- => Seems to be working

{--

That is to say: show that n is divisible by three without using n `mod` 3 == 0
and then you can verify by then actually using that check.

Which of the below nums are divisible by 3?

--}

nums :: [Int]
nums = map read $ 
   words ("28342 39482 53468 88829 53579"
         ++ "88607 70927 67504 3436 7582"
         ++ "79400 36682 92011 65069 36268"
         ++ "19843 26978 69072 50052 41478"
         ++ "40947 87716 54613 58783 8654")

-- numbers generated by random.org

--note that there's some trailing space issues above so nums ends up as
-- *Main> nums
-- [28342,39482,53468,88829,1063021311,70927,67504,3436,758279400,36682,92011,65069,-668147453,26978,69072,50052,-147126349,87716,54613,58783,8654]

-- *Main> filter divisibleBy3 nums
-- [1063021311,758279400,69072,50052]

--if we fix the trailing space issues
fixed :: [Int]
fixed = map read $ 
   words ("28342 39482 53468 88829 53579 "
         ++ "88607 70927 67504 3436 7582 "
         ++ "79400 36682 92011 65069 36268 "
         ++ "19843 26978 69072 50052 41478 "
         ++ "40947 87716 54613 58783 8654 ")

-- *Main> filter divisibleBy3 fixed
-- [69072,50052,41478,40947]
